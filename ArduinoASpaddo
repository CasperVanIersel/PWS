//libraries overzicht
#include <SPI.h>                // voor de SD kaart
#include <SD.h>                 // voor de SD kaart
#include <dht.h>                // voor de DHT11 sensor
#include <LiquidCrystal_I2C.h>  // voor het scherm
#include <Wire.h>               // voor het scherm
#include <TimeLib.h>           // voor de tid
const int pomp = 3;          // voor de pomp
const int LichtSensorPin = A0;  // voor de lichtsensor
const int AVochtMeter = A1;     // de vochtmeter in de aarde
int Pycharmcommand = Serial.read();

//Speciaal schermdingen
LiquidCrystal_I2C lcd(0x27, 16, 2);
const int LCDWidth = 16;
const int LCDHeight = 2;

#define DHT11_PIN 3  // speciale functie voor DHT11 sensor
dht DHT;

//SD-kaart waardes
File myFile;

#define TIME_MSG_LEN 11// time sync to PC is HEADER followed by Unix time_t as ten ASCII digits
#define TIME_HEADER 'T'// HEader tag for serial time sync message
#define TIME_Request 7 // ASCI bell character requests a time sync message
void setup() {
  Serial.begin(9600);
  pinMode(pomp, OUTPUT);        // dit zorgt ervoor dat de computer weet dat de pomp een output is
  pinMode(LichtSensorPin, INPUT);  // computer weet dat dit input is
  lcd.begin();                     // start lcd scherm op
  lcd.backlight();                 // start backlight op
  delay(100); // voor stabielere waardes

  //SD-kaart setup
  const int chipSelect = 10;
  if (!SD.begin(chipSelect)) {
    //Serial.println("SD-kaart mislukt");
    return;
  }
  //Serial.println("SD-kaart geslaagd");


}

void loop() {
    if(Pycharmcommand = "Initiate sensorimport ArduinoAS" || Serial.available() <= 0){
  //AardeVochtMeter
  int AVochtMeter_waarde = analogRead(A1);  // leest de waardes van de meter
  Serial.print(AVochtMeter_waarde);         // print de waarde
  delay(100);

  //Pomp code
  int waterpomp = analogRead(pomp);
  if (AVochtMeter_waarde >= 450){
   digitalWrite(pomp, HIGH);
  }
  else{
   digitalWrite(pomp, LOW);
  }
  
  //DHT11 sensor
  int chk = DHT.read11(DHT11_PIN);           // leest de sensor
  int Temperatuur_waarde = DHT.temperature;  // dit is de temp
  String Temperatuur_waarde_string = String(Temperatuur_waarde) + ".00";
  int Temperatuur_waarde_lengte = Temperatuur_waarde_string.length();

  if(Temperatuur_waarde_lengte == 5){
    Temperatuur_waarde = (Temperatuur_waarde);
    Serial.print(DHT.temperature);
  }
  else{
    Temperatuur_waarde_string = "00.00";
    Serial.print(Temperatuur_waarde_string);
  }
  delay(1000);
  //int chk = DHT.read11(DHT11_PIN);           // leest de sensor
  int Vochtigheids_waarde = DHT.humidity;  // dit is de temp
  String Vochtigheids_waarde_string = String(Vochtigheids_waarde) + ".00";
  int Vochtigheids_waarde_lengte = Vochtigheids_waarde_string.length();

  if(Vochtigheids_waarde_lengte == 5){
    Vochtigheids_waarde = (Vochtigheids_waarde);
    Serial.print(DHT.humidity);
  }
  else{
    Serial.print("00.00");
  }
  delay(3000);


  // Lichtsensor
  int LichtSensorPin_waarde = analogRead(A3);
  Serial.print(LichtSensorPin_waarde);  // zorgt voor een enter, zodat de pythoncode ook goed werkt
  delay(1000);

  //SD-kaart
  String dataString = "";
  dataString += String(AVochtMeter_waarde);     // voegt de vochtigheidswaarde toe van de aarde
  dataString += String(Temperatuur_waarde);     // voegt de temperatuur toe
  dataString += String(Vochtigheids_waarde);    // voegt de vochtigheidswaarde toe van de lucht
  dataString += String(LichtSensorPin_waarde);  // voegt het licht toe
  delay(1000);
  //Serial.println(dataString);

  File dataFile = SD.open("9okt.txt", FILE_WRITE);  // opent bestand op de SD kaart
  if (dataFile) {
    dataFile.println(dataString);
    dataFile.close();
    //Serial.println("Data gelukt");
  } else {
    //Serial.println("Data mislukt");
  }
  delay(1000);
  if (Pycharmcommand = "Initiate SD-card ArduinoAS"){
          // Lees het bestand regel voor regel
    while (dataFile.available()) {
      Serial.write(dataFile.read());
    }
    
    // Sluit het bestand
    dataFile.close();
  }
  
delay(1000);

}
}
