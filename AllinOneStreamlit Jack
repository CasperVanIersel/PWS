#Bibliotheken
import serial
from mysql.connector import connection
import mysql.connector
import datetime
import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt

#Database MYSQL connecten
db = mysql.connector.connect(  host='localhost',
  user='root',
  password="theGrowGo2024",
    database = "growgo")

cursor = db.cursor()

#Variabelen
x = 1 # variabele die verder in de code wordt gebruikt om errors te voorkomen

st.sidebar.header("Menu") #dit is de titel van de sidebar
sideselectbox = st.sidebar.selectbox("Choose page", ["Home","Plot Data", "Realtime plot and input", "Progression and prospects"], key = "selectbox")

#Datum een integer maken --> id voor iedere tabel is toch uniek
now = str(datetime.datetime.now())
timestamp_int1 = now.replace(".", "")
timestamp_int2 = timestamp_int1.replace("-", "")
timestamp_int3 = timestamp_int2.replace(":", "")
timestamp_int4 = timestamp_int3.replace(" ", "")
timestamp = int(timestamp_int4.replace(".", '')[0:14])
#print(timestamp)

#Definities maken voor structuur in de code
def import_arduinoAS(): #dit is om alle data met specifieke begrippen in de MYSQL te doen, zelfde geldt voor de andere functies
    try:
        conn = mysql.connector.connect(db)  # handig voor later in de code
        if AardeVochtASwaarde != '': #mocht er een error zijn
            cursor.execute("INSERT INTO AardeVochtAS (AardeVochtASwaarde, date) VALUES (%s, %s)", #dit is eigenlijk gewoon een sql query
                           (AardeVochtASwaarde, timestamp))
            conn.commit() #zorgt ervoor dat er echt verandering komt
            print("Aardevocht waarde is ", AardeVochtASwaarde) #mocht er iets fout gaan

    except:
        print("Aardevocht error") #mocht er iets fout zijn
        conn = mysql.connector.connect(db)

    try:
        if TemperatuurASwaarde != '':
            cursor.execute("INSERT INTO TemperatuurAS (TemperatuurASwaarde, date) VALUES (%s, %s)",
                           (TemperatuurASwaarde, timestamp))
            conn.commit()
            print("Temperatuur waarde is ", TemperatuurASwaarde)
    except:
        print('Temp error')
    try:
        if LuchtVochtASwaarde != '':
            cursor.execute("INSERT INTO LuchtVochtAS (LuchtVochtASwaarde, date) VALUES (%s, %s)",
                           (LuchtVochtASwaarde, timestamp))
            conn.commit()
            print("LuchtVocht is ", LuchtVochtASwaarde)
    except:
        print('LV error')
    try:
        if LichtASwaarde != '':
            cursor.execute("INSERT INTO LichtAS (LichtASwaarde, date) VALUES (%s, %s)",
                           (LichtASwaarde, timestamp))
            conn.commit()
            print("Licht waarde is ", LichtASwaarde)
    except:
        print('Licht error')
def import_arduino1():
    try:
        conn = mysql.connector.connect(db)  # handig voor later in de code
        if AardeVocht1arduino1_waarde != '':
            cursor.execute("INSERT INTO AardeVocht1arduino1 (AardeVocht1arduino1, date) VALUES (%s, %s)",
                           (AardeVocht1arduino1_waarde, timestamp))
            conn.commit()
            print("Aardevocht waarde is ", AardeVocht1arduino1_waarde)

    except:
        conn = mysql.connector.connect(db)
        print('AardeVocht error')

    try:
        if Temperatuur1arduino1_waarde != '':
            cursor.execute("INSERT INTO Temperatuur1arduino1 (Temperatuur1arduino1, date) VALUES (%s, %s)",
                           (Temperatuur1arduino1_waarde, timestamp))
            conn.commit()
            print("Temperatuur waarde is ", Temperatuur1arduino1_waarde)
    except:
        print('Temp error')
    try:
        if LuchtVocht1arduino1_waarde != '':
            cursor.execute("INSERT INTO LuchtVocht1arduino1 (LuchtVocht1arduino1_waarde, date) VALUES (%s, %s)",
                           (LuchtVocht1arduino1_waarde, timestamp))
            conn.commit()
            print("LuchtVocht is ", LuchtVocht1arduino1_waarde)
    except:
        print('LV error')
    try:
        if Licht1arduino1_waarde != '':
            cursor.execute("INSERT INTO Licht1arduino1 (Licht1arduino1_waarde, date) VALUES (%s, %s)",
                           (Licht1arduino1_waarde, timestamp))
            conn.commit()
            print("Licht waarde is ", Licht1arduino1_waarde)
    except:
        print('Licht error')
    try:
        if AardeVocht2arduino1_waarde != '':
            cursor.execute("INSERT INTO AardeVocht2arduino1 (AardeVocht2arduino1, date) VALUES (%s, %s)",
                           (AardeVocht2arduino1_waarde, timestamp))
            conn.commit()
            print("Aardevocht waarde is ", AardeVocht2arduino1_waarde)

    except:
        print('AardeVocht error')

    try:
        if Temperatuur2arduino1_waarde != '':
            cursor.execute("INSERT INTO Temperatuur2arduino1 (Temperatuur2arduino1, date) VALUES (%s, %s)",
                           (Temperatuur2arduino1_waarde, timestamp))
            conn.commit()
            print("Temperatuur waarde is ", Temperatuur2arduino1_waarde)
    except:
        print('Temp error')
    try:
        if LuchtVocht2arduino1_waarde != '':
            cursor.execute("INSERT INTO LuchtVocht2arduino1 (LuchtVocht2arduino1, date) VALUES (%s, %s)",
                           (LuchtVocht2arduino1_waarde, timestamp))
            conn.commit()
            print("LuchtVocht is ", LuchtVocht2arduino1_waarde)
    except:
        print('LV error')
    try:
        if Licht2arduino1_waarde != '':
            cursor.execute("INSERT INTO Licht2arduino1 (Licht2arduino1, date) VALUES (%s, %s)",
                           (Licht2arduino1_waarde, timestamp))
            conn.commit()
            print("Licht waarde is ", Licht2arduino1_waarde)
    except:
        print('Licht error')
def import_arduino2():
    try:
        conn = mysql.connector.connect(db)  # handig voor later in de code
        if AardeVocht1arduino2_waarde != '':
            cursor.execute("INSERT INTO AardeVocht1arduino2 (AardeVocht1arduino2, date) VALUES (%s, %s)",
                           (AardeVocht1arduino2_waarde, timestamp))
            conn.commit()
            print("Aardevocht waarde is ", AardeVocht1arduino2_waarde)

    except:
        print('AardeVocht error')

    try:
        if Temperatuur1arduino2_waarde != '':
            cursor.execute("INSERT INTO Temperatuur1arduino2 (Temperatuur1arduino2, date) VALUES (%s, %s)",
                           (Temperatuur1arduino2_waarde, timestamp))
            conn.commit()
            print("Temperatuur waarde is ", Temperatuur1arduino2_waarde)
    except:
        print('Temp error')
    try:
        if LuchtVocht1arduino2_waarde != '':
            cursor.execute("INSERT INTO LuchtVocht1arduino2 (LuchtVocht1arduino2, date) VALUES (%s, %s)",
                           (LuchtVocht1arduino2_waarde, timestamp))
            conn.commit()
            print("LuchtVocht is ", LuchtVocht1arduino2_waarde)
    except:
        print('LV error')
    try:
        if Licht1arduino2_waarde != '':
            cursor.execute("INSERT INTO Licht1arduino2 (Licht1arduino2, date) VALUES (%s, %s)",
                           (Licht1arduino2_waarde, timestamp))
            conn.commit()
            print("Licht waarde is ", Licht1arduino2_waarde)
    except:
        print('Licht error')
    try:
        if AardeVocht2arduino2_waarde != '':
            cursor.execute("INSERT INTO AardeVocht2arduino2 (AardeVocht2arduino2, date) VALUES (%s, %s)",
                           (AardeVocht2arduino2_waarde, timestamp))
            conn.commit()
            print("Aardevocht waarde is ", AardeVocht2arduino2_waarde)

    except:
        print('AardeVocht error')

    try:
        if Temperatuur2arduino2_waarde != '':
            cursor.execute("INSERT INTO Temperatuur2arduino2 (Temperatuur2arduino2, date) VALUES (%s, %s)",
                           (Temperatuur2arduino2_waarde, timestamp))
            conn.commit()
            print("Temperatuur waarde is ", Temperatuur2arduino2_waarde)
    except:
        print('Temp error')
    try:
        if LuchtVocht2arduino2_waarde != '':
            cursor.execute("INSERT INTO LuchtVocht2arduino2 (LuchtVocht2arduino2, date) VALUES (%s, %s)",
                           (LuchtVocht2arduino2_waarde, timestamp))
            conn.commit()
            print("LuchtVocht is ", LuchtVocht2arduino2_waarde)
    except:
        print('LV error')
    try:
        if Licht2arduino2_waarde != '':
            cursor.execute("INSERT INTO Licht2arduino2 (Licht2arduino2, date) VALUES (%s, %s)",
                           (Licht2arduino2_waarde, timestamp))
            conn.commit()
            print("Licht waarde is ", Licht2arduino2_waarde)
    except:
        print('Licht error')
def connect_arduinos():
    # arduino inloggen
    # Arduino(s) connecten
    arduino1 = serial.Serial("COM5", baudrate=9600, timeout=3)
    arduino2 = serial.Serial("COM3", baudrate=9600, timeout=3)  # idk wat timeout doet
    arduino3 = serial.Serial("COM4", baudrate=9600, timeout=3)  # deze klopt niet

    arduinoDataString1 = arduino1.readline().decode('utf-8').strip()  # vertaald de arduino wartaal
    arduinoDataString2 = arduino2.readline().decode('utf-8').strip()  # vertaald de arduino wartaal
    arduinoDataString3 = arduino3.readline().decode('utf-8').strip()  # vertaald de arduino wartaal

#Begrippen definieren om eventuele foutmeldingen te voorkomen
arduinoDataString1 = 0
arduinoDataString2 = 0
arduinoDataString3 = 0

if x == 1: # dit voorkomt gedoe met tab
    arduino1 = serial.Serial("COM5", baudrate=9600, timeout=3)
    arduino2 = serial.Serial("COM3", baudrate=9600, timeout=3)  # idk wat timeout doet
    arduino3 = serial.Serial("COM4", baudrate=9600, timeout=3)  # deze klopt niet

    arduino1.write("Initiate sensorsimport ArduinoAS") #moet ik nog veranderen bij de arduino code
    arduino2.write("Initiate sensorsimport Arduino 1")
    arduino3.write("Initiate sensorsimport Arduino 2")
    if sideselectbox == "Home":
        #App openen
        try:
            st.title("The Growgo Response Unit")
            st.header("Our new way to emergency aid for a world with less hunger")
            st.write('Oke')
        except:
            print("Eror 101, contact website builders")
    #Begin import
    elif sideselectbox ==  "Realtime plot and input":
        #Ontcijferen van input, allemaal in integers anders foutmeldingen
        try:
            while x == 1:
                connect_arduinos()
                try:
                    # Dataimport arduino1 AKA arduino AS
                    print(arduinoDataString1)
                    AardeVochtASwaarde = arduinoDataString1[0:3]
                    TemperatuurASwaarde = arduinoDataString1[3:5]
                    LuchtVochtASwaarde = arduinoDataString1[8:10]
                    LichtASwaarde = arduinoDataString1[13:16]
                    import_arduinoAS()
                    #Regendruppelaar1 = arduinoDataString[16:20]
                except:
                    st.write("Error data waardes 1")

                try:
                    AardeVocht1arduino1_waarde = arduinoDataString2[0:3] #drie waardes want 1000 is onwaarschijnlijk tenzij kapot
                    Licht1arduino1_waarde = arduinoDataString2[3:6]
                    LuchtVocht1arduino1_waarde = arduinoDataString2[6:8]
                    Temperatuur1arduino1_waarde = arduinoDataString2[8:10] #klein gat door .00
                    AardeVocht2arduino1_waarde = (arduinoDataString2[13:15])
                    Licht2arduino1_waarde = arduinoDataString2[15:18]
                    LuchtVocht2arduino1_waarde = arduinoDataString2[18:20]
                    Temperatuur2arduino1_waarde = arduinoDataString2[23:25] #klein gat door .00
                    import_arduino1()
                except:
                    st.write("Error data waardes 2")


            #Hier begint de arduino 3

                try:
                    AardeVocht1arduino2_waarde = arduinoDataString3[0:3]  # drie waardes want 1000 is onwaarschijnlijk tenzij kapot
                    Licht1arduino2_waarde = arduinoDataString3[3:6]
                    LuchtVocht1arduino2_waarde = arduinoDataString3[6:8]
                    Temperatuur1arduino2_waarde = arduinoDataString3[8:10]  # klein gat door .00
                    AardeVocht2arduino2_waarde = (arduinoDataString3[13:15])
                    Licht2arduino2_waarde = arduinoDataString3[15:18]
                    LuchtVocht2arduino2_waarde = arduinoDataString3[18:20]
                    Temperatuur2arduino2_waarde = arduinoDataString3[23:25]  # klein gat door .00
                    import_arduino2()
                except:
                    st.write("Error data waardes 3")
        except:
            st.write("Eror 101, contact website builders")
    elif sideselectbox == "Plot Data":
        try:
            #Knopje om csv of txt van SD kaart in SQL te stoppen
            #Er mogen geen andere gekke tekens bij zijn die niet voorkomen in de arduino output
            FileButton = st.file_uploader(":file_folder Upload SD-card in csv format", type = (["csv", "txt", "xlsx", "xls"]))
            SDimport = st.selectbox("Which arduino would you like to import?", ['ArduinoAS', 'Arduino2', 'Arduino3', 'ArduinoAS.txt', 'Arduino2.txt', 'Arduino3.txt'])
            if FileButton is not None:
                filename = FileButton.name
                st.write(filename)
                NewFile = pd.read_csv(filename, encoding = "ISO-8859-1")
                if SDimport == 'ArduinoAS':
                   arduino1 = serial.Serial("COM5", baudrate=9600, timeout=3)
                   Pycharmcommand = 'Initiate SD-card ArduinoAS'
                   arduino1.write(Pycharmcommand.encode())
                   arduinoDataString1 = arduino1.readline().decode('utf-8').strip()  # vertaald de arduino wartaal
                   for i in range(arduinoDataString1):
                       import_arduinoAS()
                elif SDimport == 'Arduino2':
                   arduino2 = serial.Serial("COM4", baudrate=9600, timeout=3)
                   Pycharmcommand = 'Initiate SD-card Arduino 2'
                   arduino2.write(Pycharmcommand.encode())
                   arduinoDataString2 = arduino2.readline().decode('utf-8').strip()  # vertaald de arduino wartaal
                   for i in range(arduinoDataString2):
                       import_arduino1()
                elif SDimport == 'Arduino3':
                   arduino3 = serial.Serial("COM3", baudrate=9600, timeout=3)
                   Pycharmcommand = 'Initiate SD-card Arduino 3'
                   arduino3.write(Pycharmcommand.encode())
                   arduinoDataString3 = arduino3.readline().decode('utf-8').strip()  # vertaald de arduino wartaal
                   for i in range(arduinoDataString3):
                       import_arduino2()
                elif SDimport == 'Arduino2.txt':
                    with open(filename) as file:
                        for row in file:
                            print('zero')
                            AardeVocht1arduino1_waarde = file[
                                                         0:3]  # drie waardes want 1000 is onwaarschijnlijk tenzij kapot
                            Licht1arduino1_waarde = file[3:6]
                            LuchtVocht1arduino1_waarde = file[6:8]
                            Temperatuur1arduino1_waarde = file[8:10]  # klein gat door .00
                            AardeVocht2arduino1_waarde = file[13:15]
                            Licht2arduino1_waarde = file[15:18]
                            LuchtVocht2arduino1_waarde = file[18:20]
                            Temperatuur2arduino1_waarde = arduinoDataString2[23:25]  # klein gat door .00
                            import_arduino1()
                elif SDimport == 'Arduino3.txt':
                    with open(filename) as file:
                        AardeVocht1arduino2_waarde = file[0:3]  # drie waardes want 1000 is onwaarschijnlijk tenzij kapot
                        Licht1arduino2_waarde = file[3:6]
                        LuchtVocht1arduino2_waarde = file[6:8]
                        Temperatuur1arduino2_waarde = file[8:10]  # klein gat door .00
                        AardeVocht2arduino2_waarde = file[13:15]
                        Licht2arduino2_waarde = file[15:18]
                        LuchtVocht2arduino2_waarde = file[18:20]
                        Temperatuur2arduino2_waarde = arduinoDataString2[23:25]  # klein gat door .00
                        import_arduino2()
                elif SDimport == 'ArduinoAS.txt':
                    with open(filename) as file:
                        AardeVocht1ASwaarde = file[0:3]  # drie waardes want 1000 is onwaarschijnlijk tenzij kapot
                        Licht1ASwaarde = file[3:6]
                        LuchtVocht1ASwaarde = file[6:8]
                        Temperatuur1ASwaarde = file[8:10]  # klein gat door .00
                        AardeVocht2ASwaarde = file[13:15]
                        Licht2ASwaarde = file[15:18]
                        LuchtVocht2ASwaarde = file[18:20]
                        Temperatuur2ASwaarde = arduinoDataString2[23:25]
                        import_arduinoAS()
            else:
                st.write("No new file upload")
            #De plotchaos
            cursor.execute("SELECT * FROM TemperatuurAS, ORDER BY date DESC")
            rows_TemperatuurAS = cursor.fetchall()
            df_TemperatuurAS = pd.DataFrame(rows_TemperatuurAS)
            df_TemperatuurAS.columns = ['date', 'TemperatuurAS_waarde']

            cursor.execute("SELECT * FROM AardeVochtAS, ORDER BY date DESC")
            rows_AardeVochtAS = cursor.fetchall()
            df_AardeVochtAS = pd.DataFrame(rows_AardeVochtAS)
            df_AardeVochtAS.columns = ['date', 'AardeVochtAS_waarde']

            cursor.execute("SELECT * FROM LuchtVochtAS, ORDER BY date DESC")
            rows_LuchtVochtAS = cursor.fetchall()
            df_LuchtVochtAS = pd.DataFrame(rows_LuchtVochtAS)
            df_LuchtVochtAS.columns = ['date', 'LuchtVochtAS_waarde']

            cursor.execute("SELECT * FROM LichtAS, ORDER BY date DESC")
            rows_LichtAS = cursor.fetchall()
            df_LichtAS = pd.DataFrame(rows_LichtAS)
            df_LichtAS.columns = ['date', 'LichtAS_waarde']

            cursor.execute("SELECT * FROM Temperatuur1Arduino1_waarde, ORDER BY date DESC")
            rows_Temperatuur1Arduino1_waarde = cursor.fetchall()
            df_Temperatuur1Arduino1_waarde = pd.DataFrame(rows_Temperatuur1Arduino1_waarde)
            df_Temperatuur1Arduino1_waarde.columns = ['date', 'Temperatuur1Arduino1_waarde']

            cursor.execute("SELECT * FROM Licht1Arduino1_waarde, ORDER BY date DESC")
            rows_Licht1Arduino1_waarde = cursor.fetchall()
            df_Licht1Arduino1_waarde = pd.DataFrame(rows_Licht1Arduino1_waarde)
            df_Licht1Arduino1_waarde.columns = ['date', 'Licht1Arduino1_waarde']

            cursor.execute("SELECT * FROM AardeVocht1Arduino1_waarde, ORDER BY date DESC")
            rows_AardeVocht1Arduino1_waarde = cursor.fetchall()
            df_AardeVocht1Arduino1_waarde = pd.DataFrame(rows_AardeVocht1Arduino1_waarde)
            df_AardeVocht1Arduino1_waarde.columns = ['date', 'AardeVocht1Arduino1_waarde']

            cursor.execute("SELECT * FROM LuchtVocht1Arduino1_waarde, ORDER BY date DESC")
            rows_LuchtVocht1Arduino1_waarde = cursor.fetchall()
            df_LuchtVocht1Arduino1_waarde = pd.DataFrame(rows_LuchtVocht1Arduino1_waarde)
            df_LuchtVocht1Arduino1_waarde.columns = ['date', 'LuchtVocht1Arduino1_waarde']

            cursor.execute("SELECT * FROM Temperatuur2Arduino1_waarde, ORDER BY date DESC")
            rows_Temperatuur2Arduino1_waarde = cursor.fetchall()
            df_Temperatuur2Arduino1_waarde = pd.DataFrame(rows_Temperatuur2Arduino1_waarde)
            df_Temperatuur2Arduino1_waarde.columns = ['date', 'Temperatuur2Arduino1_waarde']

            cursor.execute("SELECT * FROM Licht2Arduino1_waarde, ORDER BY date DESC")
            rows_Licht2Arduino1_waarde = cursor.fetchall()
            df_Licht2Arduino1_waarde = pd.DataFrame(rows_Licht2Arduino1_waarde)
            df_Licht2Arduino1_waarde.columns = ['date', 'Licht2Arduino1_waarde']

            cursor.execute("SELECT * FROM AardeVocht2Arduino1_waarde, ORDER BY date DESC")
            rows_AardeVocht2Arduino1_waarde = cursor.fetchall()
            df_AardeVocht2Arduino1_waarde = pd.DataFrame(rows_AardeVocht2Arduino1_waarde)
            df_AardeVocht2Arduino1_waarde.columns = ['date', 'AardeVocht2Arduino1_waarde']

            cursor.execute("SELECT * FROM LuchtVocht2Arduino1_waarde, ORDER BY date DESC")
            rows_LuchtVocht2Arduino1_waarde = cursor.fetchall()
            df_LuchtVocht2Arduino1_waarde = pd.DataFrame(rows_LuchtVocht2Arduino1_waarde)
            df_LuchtVocht2Arduino1_waarde.columns = ['date', 'LuchtVocht2Arduino1_waarde']

            cursor.execute("SELECT * FROM Temperatuur1Arduino2_waarde, ORDER BY date DESC")
            rows_Temperatuur1Arduino2_waarde = cursor.fetchall()
            df_Temperatuur1Arduino2_waarde = pd.DataFrame(rows_Temperatuur1Arduino2_waarde)
            df_Temperatuur1Arduino2_waarde.columns = ['date', 'Temperatuur1Arduino2_waarde']

            cursor.execute("SELECT * FROM Licht1Arduino2_waarde, ORDER BY date DESC")
            rows_Licht1Arduino2_waarde = cursor.fetchall()
            df_Licht1Arduino2_waarde = pd.DataFrame(rows_Licht1Arduino2_waarde)
            df_Licht1Arduino2_waarde.columns = ['date', 'Licht1Arduino2_waarde']

            cursor.execute("SELECT * FROM AardeVocht1Arduino2_waarde, ORDER BY date DESC")
            rows_AardeVocht1Arduino2_waarde = cursor.fetchall()
            df_AardeVocht1Arduino2_waarde = pd.DataFrame(rows_AardeVocht1Arduino2_waarde)
            df_AardeVocht1Arduino2_waarde.columns = ['date', 'AardeVocht1Arduino2_waarde']

            cursor.execute("SELECT * FROM LuchtVocht1Arduino2_waarde, ORDER BY date DESC")
            rows_LuchtVocht1Arduino2_waarde = cursor.fetchall()
            df_LuchtVocht1Arduino2_waarde = pd.DataFrame(rows_LuchtVocht1Arduino2_waarde)
            df_LuchtVocht1Arduino2_waarde.columns = ['date', 'LuchtVocht1Arduino2_waarde']

            cursor.execute("SELECT * FROM Temperatuur2Arduino2_waarde, ORDER BY date DESC")
            rows_Temperatuur2Arduino2_waarde = cursor.fetchall()
            df_Temperatuur2Arduino2_waarde = pd.DataFrame(rows_Temperatuur2Arduino2_waarde)
            df_Temperatuur2Arduino2_waarde.columns = ['date', 'Temperatuur2Arduino2_waarde']

            cursor.execute("SELECT * FROM Licht2Arduino2_waarde, ORDER BY date DESC")
            rows_Licht2Arduino2_waarde = cursor.fetchall()
            df_Licht2Arduino2_waarde = pd.DataFrame(rows_Licht2Arduino2_waarde)
            df_Licht2Arduino2_waarde.columns = ['date', 'Licht2Arduino2_waarde']

            cursor.execute("SELECT * FROM AardeVocht2Arduino2_waarde, ORDER BY date DESC")
            rows_AardeVocht2Arduino2_waarde = cursor.fetchall()
            df_AardeVocht2Arduino2_waarde = pd.DataFrame(rows_AardeVocht2Arduino2_waarde)
            df_AardeVocht2Arduino2_waarde.columns = ['date', 'AardeVocht2Arduino2_waarde']

            cursor.execute("SELECT * FROM LuchtVocht2Arduino2_waarde, ORDER BY date DESC")
            rows_LuchtVocht2Arduino2_waarde = cursor.fetchall()
            df_LuchtVocht2Arduino2_waarde = pd.DataFrame(rows_LuchtVocht2Arduino2_waarde)
            df_LuchtVocht2Arduino2_waarde.columns = ['date', 'LuchtVocht2Arduino2_waarde']

            fig,ax = plt.subplots(5,4)
            ax[1,0].plot(df_TemperatuurAS['TemperatuurAS_waarde'], df_TemperatuurAS('date'), color = 'r')
            ax[1,1].plot(df_AardeVochtAS['AardeVochtAS_waarde'], df_AardeVochtAS('date'), color = 'b')
            ax[1,2].plot(df_LuchtVochtAS['LuchtVochtAS_waarde'], df_LuchtVochtAS('date'), color='b')
            ax[1,3].plot(df_LichtAS['LichtAS_waarde'], df_LichtAS('date'), color='r')

            ax[2, 0].plot(df_Temperatuur1Arduino1_waarde['Temperatuur1Arduino1_waarde'], df_Temperatuur1Arduino1_waarde('date'), color='r')
            ax[2, 1].plot(df_AardeVocht1Arduino1_waarde['AardeVocht1Arduino1_waarde'], df_AardeVocht1Arduino1_waarde('date'), color='b')
            ax[2, 2].plot(df_LuchtVocht1Arduino1_waarde['LuchtVocht1Arduino1_waarde'], df_LuchtVocht1Arduino1_waarde('date'), color='b')
            ax[2, 3].plot(df_Licht1Arduino1_waarde['Licht1Arduino1_waarde'], df_Licht1Arduino1_waarde('date'), color='r')

            ax[3, 0].plot(df_Temperatuur2Arduino1_waarde['Temperatuur2Arduino1_waarde'],
                          df_Temperatuur2Arduino1_waarde('date'), color='r')
            ax[3, 1].plot(df_AardeVocht2Arduino1_waarde['AardeVocht2Arduino1_waarde'],
                          df_AardeVocht2Arduino1_waarde('date'), color='b')
            ax[3, 2].plot(df_LuchtVocht2Arduino1_waarde['LuchtVocht2Arduino1_waarde'],
                          df_LuchtVocht2Arduino1_waarde('date'), color='b')
            ax[3, 3].plot(df_Licht1Arduino1_waarde['Licht2Arduino1_waarde'], df_Licht2Arduino1_waarde('date'), color='r')

            ax[4, 0].plot(df_Temperatuur1Arduino2_waarde['Temperatuur1Arduino2_waarde'], df_Temperatuur1Arduino2_waarde('date'),
                          color='r')
            ax[4, 1].plot(df_AardeVocht1Arduino2_waarde['AardeVocht1Arduino2_waarde'], df_AardeVocht1Arduino2_waarde('date'),
                          color='b')
            ax[4, 2].plot(df_LuchtVocht1Arduino2_waarde['LuchtVocht1Arduino2_waarde'], df_LuchtVocht1Arduino2_waarde('date'),
                          color='b')
            ax[4, 3].plot(df_Licht1Arduino2_waarde['Licht1Arduino2_waarde'], df_Licht1Arduino2_waarde('date'), color='r')

            ax[5, 0].plot(df_Temperatuur2Arduino2_waarde['Temperatuur2Arduino2_waarde'],
                          df_Temperatuur2Arduino2_waarde('date'), color='r')
            ax[5, 1].plot(df_AardeVocht2Arduino2_waarde['AardeVocht2Arduino2_waarde'],
                          df_AardeVocht2Arduino2_waarde('date'), color='b')
            ax[5, 2].plot(df_LuchtVocht2Arduino2_waarde['LuchtVocht2Arduino2_waarde'],
                          df_LuchtVocht2Arduino2_waarde('date'), color='b')
            ax[5, 3].plot(df_Licht1Arduino2_waarde['Licht2Arduino2_waarde'], df_Licht2Arduino2_waarde('date'), color='r')

            st.pyplot(fig)
        except:
            st.write("Error 101, contact website builders")

    elif sideselectbox == "Progression and prospects":
        st.write("This page is under construction")










